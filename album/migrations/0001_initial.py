# Generated by Django 5.2.6 on 2025-09-20 20:11

import django.db.models.deletion
import pgvector.django
from django.conf import settings
from django.db import migrations, models
from pgvector.django import VectorExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        VectorExtension(),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Photo Album Site', help_text='The main title displayed on the homepage.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description for the site.')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description.')),
                ('created_by', models.ForeignKey(help_text='User who created this category.', on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of the album.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description of the album.')),
                ('is_public', models.BooleanField(default=False, help_text='If true, album is visible to all users.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cover_image', models.ImageField(blank=True, help_text='Optional cover image for the album.', null=True, upload_to='album_covers/')),
                ('owner', models.ForeignKey(help_text='User who owns this album.', on_delete=django.db.models.deletion.CASCADE, related_name='owned_albums', to=settings.AUTH_USER_MODEL)),
                ('viewers', models.ManyToManyField(blank=True, help_text='Users who can view this album.', related_name='viewable_albums', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, help_text='Optional category for this album.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='albums', to='album.category')),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_albums', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Custom Album',
                'verbose_name_plural': 'Custom Albums',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the media.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description of the media.')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('width', models.PositiveIntegerField(blank=True, help_text='Media width in pixels.', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='Media height in pixels.', null=True)),
                ('checksum', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('image', models.ImageField(help_text='Upload the photo file.', upload_to='photos/')),
                ('date_taken', models.DateTimeField(blank=True, help_text='Date and time the photo was taken.', null=True)),
                ('camera_make', models.CharField(blank=True, help_text='Camera make.', max_length=100, null=True)),
                ('camera_model', models.CharField(blank=True, help_text='Camera model.', max_length=100, null=True)),
                ('latitude', models.FloatField(blank=True, help_text='GPS latitude.', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='GPS longitude.', null=True)),
                ('embedding', pgvector.django.VectorField(blank=True, dimensions=512, null=True)),
                ('album', models.ForeignKey(blank=True, help_text='Album this media belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='album.album')),
                ('category', models.ForeignKey(blank=True, help_text='Optional category.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='album.category')),
                ('custom_albums', models.ManyToManyField(blank=True, related_name='photos', to='album.customalbum')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
                'ordering': ['-uploaded_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='album.photo')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='photo',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='photos', to='album.tag'),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the media.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description of the media.')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('width', models.PositiveIntegerField(blank=True, help_text='Media width in pixels.', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='Media height in pixels.', null=True)),
                ('checksum', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('video', models.FileField(help_text='Upload the video file.', upload_to='videos/')),
                ('thumbnail', models.ImageField(blank=True, help_text='Video thumbnail image.', null=True, upload_to='video_thumbnails/')),
                ('date_recorded', models.DateTimeField(blank=True, help_text='Date and time the video was recorded.', null=True)),
                ('duration', models.FloatField(blank=True, help_text='Video duration in seconds.', null=True)),
                ('codec', models.CharField(blank=True, help_text='Video codec.', max_length=50, null=True)),
                ('album', models.ForeignKey(blank=True, help_text='Album this media belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='album.album')),
                ('category', models.ForeignKey(blank=True, help_text='Optional category.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='album.category')),
                ('custom_albums', models.ManyToManyField(blank=True, related_name='videos', to='album.customalbum')),
                ('tags', models.ManyToManyField(blank=True, related_name='videos', to='album.tag')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'ordering': ['-uploaded_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlbumShareLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_token', models.CharField(db_index=True, help_text='Unique token for the share link.', max_length=64, unique=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this share link expires.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this share link is active.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times this link has been accessed.')),
                ('album', models.ForeignKey(help_text='Album being shared.', on_delete=django.db.models.deletion.CASCADE, related_name='share_links', to='album.album')),
                ('created_by', models.ForeignKey(help_text='User who created this share link.', on_delete=django.db.models.deletion.CASCADE, related_name='created_share_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Album Share Link',
                'verbose_name_plural': 'Album Share Links',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['share_token'], name='album_album_share_t_3305c0_idx'), models.Index(fields=['expires_at'], name='album_album_expires_f63317_idx'), models.Index(fields=['is_active'], name='album_album_is_acti_9e957a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='album_categ_name_fb7ff2_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['created_by'], name='album_categ_created_dc5d90_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['owner'], name='album_album_owner_i_56e2a3_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['is_public'], name='album_album_is_publ_8372a1_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['created_at'], name='album_album_created_0bd0b9_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['category'], name='album_album_categor_ef33da_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['title'], name='album_album_title_014926_idx'),
        ),
        migrations.AddIndex(
            model_name='customalbum',
            index=models.Index(fields=['owner'], name='album_custo_owner_i_abb93b_idx'),
        ),
        migrations.AddIndex(
            model_name='customalbum',
            index=models.Index(fields=['title'], name='album_custo_title_37a681_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('user', 'photo')},
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name'], name='album_tag_name_7a8d44_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['album'], name='album_photo_album_i_a9a597_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['category'], name='album_photo_categor_4f04ec_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['uploaded_at'], name='album_photo_uploade_f9a63c_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['title'], name='album_photo_title_d90487_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['checksum'], name='album_photo_checksu_3dd637_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['date_taken'], name='album_photo_date_ta_733cb9_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['album'], name='album_video_album_i_49ee8c_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['category'], name='album_video_categor_c5749c_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['uploaded_at'], name='album_video_uploade_70162d_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['title'], name='album_video_title_2c40b6_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['checksum'], name='album_video_checksu_335702_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['date_recorded'], name='album_video_date_re_37f734_idx'),
        ),
    ]
