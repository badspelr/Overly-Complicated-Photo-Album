# =============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains settings for the production environment.
# Fill in the placeholder values before deployment.
# NEVER commit this file to git if it contains real secrets.
# =============================================================================

# -----------------------------------------------------------------------------
# DJANGO CORE SETTINGS
# -----------------------------------------------------------------------------
# SECURITY WARNING: Generate a strong, unique secret key for production.
# Use: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-super-secret-and-long-random-key-here

# SECURITY WARNING: Set to False in production.
DEBUG=False

# Comma-separated list of your production domain names.
# Example: ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
ALLOWED_HOSTS=yourdomain.com

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
DB_ENGINE=django.db.backends.postgresql
DB_NAME=photo_album
DB_USER=your-production-db-user
DB_PASSWORD=your-secure-production-db-password
DB_HOST=db
DB_PORT=5432

# -----------------------------------------------------------------------------
# EMAIL CONFIGURATION (for production)
# -----------------------------------------------------------------------------
# Use a transactional email service like SendGrid, Mailgun, or Amazon SES.
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=your-smtp-host.com
EMAIL_PORT=587
EMAIL_HOST_USER=your-smtp-username
EMAIL_HOST_PASSWORD=your-smtp-password-or-api-key
EMAIL_USE_TLS=True
DEFAULT_FROM_EMAIL="Photo Album <noreply@yourdomain.com>"
SERVER_EMAIL="Server Errors <server-errors@yourdomain.com>"
CONTACT_EMAIL="Contact Form <contact@yourdomain.com>"

# -----------------------------------------------------------------------------
# SECURITY SETTINGS (assumes HTTPS is handled by a reverse proxy like Nginx)
# -----------------------------------------------------------------------------
# If your reverse proxy handles SSL termination, these can be True.
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# -----------------------------------------------------------------------------
# CORS CONFIGURATION (Cross-Origin Resource Sharing)
# -----------------------------------------------------------------------------
# List the specific frontend domains that are allowed to access your API.
# Example: CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
CORS_ALLOWED_ORIGINS=https://yourfrontenddomain.com

# This should always be False in production.
CORS_ALLOW_ALL_ORIGINS=False

# -----------------------------------------------------------------------------
# REDIS & CELERY (Cache and Background Tasks)
# -----------------------------------------------------------------------------
REDIS_URL=redis://redis:6379/1
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0
CELERY_WORKER_CONCURRENCY=4

# -----------------------------------------------------------------------------
# GUNICORN WEB SERVER
# -----------------------------------------------------------------------------
GUNICORN_WORKERS=4
GUNICORN_THREADS=2
GUNICORN_TIMEOUT=120
WEB_PORT=8000

# -----------------------------------------------------------------------------
# AI & FILE UPLOAD SETTINGS
# -----------------------------------------------------------------------------
# Hugging Face Token (optional, but recommended for AI features)
HF_TOKEN=your-huggingface-token

# File upload limits (in bytes)
# 50MB = 52428800
FILE_UPLOAD_MAX_MEMORY_SIZE=52428800
DATA_UPLOAD_MAX_MEMORY_SIZE=52428800
DATA_UPLOAD_MAX_NUMBER_FILES=1000

# AI Processing
AI_ENABLE_GPU=False # Set to True if you have a GPU-enabled instance
AI_BATCH_SIZE=16
